import{d as derived,w as writable}from"./kEgIIrK5.js";const ALL_CITY_SLUGS=["addis-ababa-ethiopia","almaty-kazakhstan","amsterdam-netherlands","athens-greece","auckland-new-zealand","bangkok-thailand","barcelona-spain","belgrade-serbia","berlin-germany","bogota-colombia","brussels-belgium","bucharest-romania","budapest-hungary","buenos-aires-argentina","cairo-egypt","cape-town-south-africa","cartagena-colombia","casablanca-morocco","cebu-philippines","chiang-mai-thailand","copenhagen-denmark","delhi-india","doha-qatar","dubai-uae","dublin-ireland","edinburgh-united-kingdom","florence-italy","gothenburg-sweden","guadalajara-mexico","guayaquil-ecuador","hanoi-vietnam","helsinki-finland","ho-chi-minh-city-vietnam","hong-kong-hong-kong","istanbul-turkey","jakarta-indonesia","kathmandu-nepal","krakow-poland","kuala-lumpur-malaysia","la-paz-bolivia","lagos-nigeria","lima-peru","ljubljana-slovenia","london-united-kingdom","lyon-france","madrid-spain","manila-philippines","marrakesh-morocco","medellin-colombia","melbourne-australia","mendoza-argentina","montevideo-uruguay","montreal-canada","mumbai-india","munich-germany","nairobi-kenya","nice-france","nicosia-cyprus","oaxaca-mexico","oslo-norway","paris-france","prague-czech-republic","quito-ecuador","rio-de-janeiro-brazil","rome-italy","rotterdam-netherlands","santiago-chile","seoul-south-korea","seville-spain","split-croatia","stockholm-sweden","sydney-australia","sao-paulo-brazil","taipei-taiwan","tashkent-uzbekistan","tbilisi-georgia","thessaloniki-greece","toronto-canada","tunis-tunisia","valparaiso-chile","vienna-austria","vilnius-lithuania","warsaw-poland","wroclaw-poland","zagreb-croatia","zurich-switzerland"];function shuffleArray(e){const i=[...e];for(let t=i.length-1;t>0;t--){const a=Math.floor(Math.random()*(t+1));[i[t],i[a]]=[i[a],i[t]]}return i}function parseSlug(e){const i=e.split("-"),t=i[i.length-1],o=i.slice(0,-1).map(s=>s.charAt(0).toUpperCase()+s.slice(1)).join(" "),n=t.charAt(0).toUpperCase()+t.slice(1);return{name:o,countryName:n}}async function loadCityData(slug){try{console.log(`🔍 Loading data for ${slug}...`);const response=await fetch(`/cities/${slug}/data.js`);if(!response.ok)return console.warn(`❌ Failed to fetch data for ${slug}: ${response.status}`),{};const text=await response.text();console.log(`📝 Raw data for ${slug}:`,text.substring(0,200));const match=text.match(/export const cityData = ({[\s\S]*?});/);if(!match)return console.warn(`❌ No cityData found in ${slug}/data.js`),{};const cityDataStr=match[1],cityData=eval(`(${cityDataStr})`);return console.log(`✅ Parsed data for ${slug}:`,cityData),cityData.images&&(cityData.images=cityData.images.map(e=>`/cities/${slug}/${e}`)),cityData}catch(e){return console.error(`❌ Failed to load data for ${slug}:`,e),{}}}async function initializeCities(){console.log("🏗️ Initializing cities...");const e=ALL_CITY_SLUGS.map(async t=>{const{name:a,countryName:o}=parseSlug(t);try{const n=await loadCityData(t);return{slug:t,name:n.city||a,country:n.country||o,status:"?",description:n.description||`Beautiful ${a} with rich culture and amazing sights to explore`,weather:n.weather,food:n.food,images:n.images||[`/cities/${t}/images/001.jpg`],imageCount:n.imageCount||n.images?.length||1}}catch(n){return console.warn(`⚠️ Failed to load ${t}, using fallback data:`,n),{slug:t,name:a,country:o,status:"?",description:`Beautiful ${a} with rich culture and amazing sights to explore`,images:[`/cities/${t}/images/001.jpg`],imageCount:1}}}),i=await Promise.all(e);return console.log("✅ Loaded cities with real data:",i.slice(0,3)),i}const VOTING_METHODS=[{id:"BILATERAL_4KEY",name:"Lightning Round",technicalName:"Two-at-a-time, 4-Key Commit",description:"Quick decisions on city pairs with instant commitment",category:"FAST",minActions:43,maxActions:43,accuracy:63},{id:"SEQ_YN",name:"Yes or No",technicalName:"Sequential Approval (Y/N)",description:"Simple thumbs up or down for each destination",category:"SIMPLE",minActions:86,maxActions:86,accuracy:67},{id:"TRIAD_WINNER_4",name:"Triple Crown Plus",technicalName:"Triads (winner-rate) r=4",description:"Enhanced three-way battles with deeper analysis",category:"ENHANCED",minActions:104,maxActions:104,accuracy:69},{id:"TRIAGE_YMN",name:"Second Thoughts",technicalName:"Two-Pass Triage (Y/M/N → binary)",description:"Sort into piles, then refine your maybes",category:"PRECISE",minActions:116,maxActions:116,accuracy:71},{id:"MICRO_DUELS_3",name:"Head to Head",technicalName:"Micro-Duels r=3",description:"City versus city battles until clear winners emerge",category:"TACTICAL",minActions:129,maxActions:129,accuracy:72},{id:"MAXDIFF_ADAPTIVE_4",name:"Best & Worst",technicalName:"Max-Diff Adaptive s=4",description:"Pick favorites and least favorites from smart groupings",category:"ELITE",minActions:257,maxActions:257,accuracy:79}];function createPersistedSession(){const{subscribe:e,set:i,update:t}=writable(null);return{subscribe:e,set:a=>{typeof window<"u"&&(a?localStorage.setItem("voting-session",JSON.stringify(a)):localStorage.removeItem("voting-session")),i(a)},update:a=>{t(o=>{const n=a(o);return typeof window<"u"&&(n?localStorage.setItem("voting-session",JSON.stringify(n)):localStorage.removeItem("voting-session")),n})},load:()=>{if(typeof window<"u"){const a=localStorage.getItem("voting-session");if(a)try{const o=JSON.parse(a);return i(o),o}catch(o){console.warn("Failed to load session from localStorage:",o),localStorage.removeItem("voting-session")}}return null}}}const currentSession=createPersistedSession();derived(currentSession,e=>e!==null);const progress=derived(currentSession,e=>e?Math.round(e.currentStep/e.totalSteps*100):0),binaryString=derived(currentSession,e=>e?e.binaryResult:"");derived(currentSession,e=>e?e.cities.filter(i=>i.status!=="?"):[]);derived(currentSession,e=>e?e.cities.filter(i=>i.status==="1"):[]);derived(currentSession,e=>e?e.cities.filter(i=>i.status==="0"):[]);async function startVotingSession(e){console.log(`🚀 Starting voting session for ${e}...`);const i=currentSession.load();if(i&&i.methodId===e){console.log("✅ Restored existing session from localStorage - cities in saved order"),console.log("First 5 cities:",i.cities.slice(0,5).map(a=>a.name).join(", "));return}else console.log(i?"🔄 Different method, creating new session":"🆕 No existing session, creating new one");const t=VOTING_METHODS.find(a=>a.id===e);if(!t)throw console.error(`❌ Unknown method: ${e}`),new Error(`Unknown method: ${e}`);console.log(`✅ Method found: ${t.name}`);try{const a=await initializeCities();console.log(`✅ Loaded ${a.length} cities:`,a.slice(0,2));const o=[...a],n=shuffleArray([...a]);console.log("🔀 Shuffled cities for random voting order:",n.slice(0,5).map(c=>c.name).join(", ")+"..."),console.log("📋 Original alphabetical order maintained for results:",o.slice(0,5).map(c=>c.name).join(", ")+"...");const s="?".repeat(86),r={methodId:e,startTime:Date.now(),currentStep:0,totalSteps:t.maxActions,binaryResult:s,cities:n,originalCities:o,isComplete:!1};currentSession.set(r),console.log("✅ Session created successfully:",{methodId:e,cityCount:a.length})}catch(a){throw console.error("❌ Failed to initialize cities:",a),a}}function updateCityStatus(e,i){currentSession.update(t=>{if(!t)return t;const a=t.cities.findIndex(r=>r.slug===e);if(a===-1)return t;t.cities[a].status=i;const o=t.originalCities.findIndex(r=>r.slug===e);if(o===-1)return t;t.originalCities[o].status=i;const n=t.binaryResult.split("");n[o]=i,t.binaryResult=n.join(""),t.currentStep=Math.min(t.currentStep+1,t.totalSteps);const s=t.cities.filter(r=>r.status==="?").length;return t.isComplete=s===0||t.currentStep>=t.totalSteps,t})}function completeVotingSession(){currentSession.update(e=>e&&{...e,isComplete:!0})}function clearVotingSession(){currentSession.set(null)}export{clearVotingSession as a,completeVotingSession as b,currentSession as c,binaryString as d,progress as p,startVotingSession as s,updateCityStatus as u};
